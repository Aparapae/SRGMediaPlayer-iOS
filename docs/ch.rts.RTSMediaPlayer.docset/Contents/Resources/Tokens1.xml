<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RTSMediaPlayerController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RTSMediaPlayerController</TokenIdentifier>
			<Abstract type="html">RTSMediaPlayerController is inspired by the MPMoviePlayerController class.
A media player (of type RTSMediaPlayerController) manages the playback of a media from a file or a network stream. You can incorporate a media playerâ€™s view into a view hierarchy owned by your app, or use a RTSMediaPlayerViewController object to manage the presentation for you.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
            
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/initWithContentURL:</TokenIdentifier>
			<Abstract type="html">Returns a RTSMediaPlayerController object initialized with the media at the specified URL.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithContentURL:(NSURL *)contentURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>contentURL</Name>
					<Abstract type="html">The location of the media file. This file must be located either in your app directory or on a remote server.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A media player controller</Abstract></ReturnValue>
			<Anchor>//api/name/initWithContentURL:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/initWithContentIdentifier:dataSource:</TokenIdentifier>
			<Abstract type="html">Returns a RTSMediaPlayerController object initialized with a datasource and a media identifier.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithContentIdentifier:(NSString *)identifier dataSource:(id&lt;RTSMediaPlayerControllerDataSource&gt;)dataSource</Declaration>
			<Parameters>
				<Parameter>
					<Name>identifier</Name>
					<Abstract type="html">&lt;#identifier description#&gt;</Abstract>
				</Parameter><Parameter>
					<Name>dataSource</Name>
					<Abstract type="html">&lt;#dataSource description#&gt;</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A media player controller</Abstract></ReturnValue>
			<Anchor>//api/name/initWithContentIdentifier:dataSource:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/setPlayer:</TokenIdentifier>
			<Abstract type="html">The player that provides the media content.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (readonly) AVPlayer *player</Declaration>
			
			
			<Anchor>//api/name/player</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/player</TokenIdentifier>
			<Abstract type="html">The player that provides the media content.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (readonly) AVPlayer *player</Declaration>
			
			
			<Anchor>//api/name/player</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RTSMediaPlayerController/player</TokenIdentifier>
			<Abstract type="html">The player that provides the media content.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (readonly) AVPlayer *player</Declaration>
			
			
			<Anchor>//api/name/player</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/setDataSource:</TokenIdentifier>
			<Abstract type="html">&lt;#Description#&gt;</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (readonly) id&lt;RTSMediaPlayerControllerDataSource&gt; dataSource</Declaration>
			
			
			<Anchor>//api/name/dataSource</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/dataSource</TokenIdentifier>
			<Abstract type="html">&lt;#Description#&gt;</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (readonly) id&lt;RTSMediaPlayerControllerDataSource&gt; dataSource</Declaration>
			
			
			<Anchor>//api/name/dataSource</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RTSMediaPlayerController/dataSource</TokenIdentifier>
			<Abstract type="html">&lt;#Description#&gt;</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (readonly) id&lt;RTSMediaPlayerControllerDataSource&gt; dataSource</Declaration>
			
			
			<Anchor>//api/name/dataSource</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/setIdentifier:</TokenIdentifier>
			<Abstract type="html">Use this identifier to identify the media through notifications</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/initWithContentIdentifier:dataSource:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (readonly) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/identifier</TokenIdentifier>
			<Abstract type="html">Use this identifier to identify the media through notifications</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/initWithContentIdentifier:dataSource:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (readonly) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RTSMediaPlayerController/identifier</TokenIdentifier>
			<Abstract type="html">Use this identifier to identify the media through notifications</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/initWithContentIdentifier:dataSource:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (readonly) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/setPlaybackState:</TokenIdentifier>
			<Abstract type="html">Returns the current playback state of the media player.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (readonly) RTSMediaPlaybackState playbackState</Declaration>
			
			
			<Anchor>//api/name/playbackState</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/playbackState</TokenIdentifier>
			<Abstract type="html">Returns the current playback state of the media player.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (readonly) RTSMediaPlaybackState playbackState</Declaration>
			
			
			<Anchor>//api/name/playbackState</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RTSMediaPlayerController/playbackState</TokenIdentifier>
			<Abstract type="html">Returns the current playback state of the media player.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (readonly) RTSMediaPlaybackState playbackState</Declaration>
			
			
			<Anchor>//api/name/playbackState</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/play</TokenIdentifier>
			<Abstract type="html">Start playing media.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>- (void)play</Declaration>
			
			
			<Anchor>//api/name/play</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/playIdentifier:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>- (void)playIdentifier:(NSString *)identifier</Declaration>
			
			
			<Anchor>//api/name/playIdentifier:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/pause</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>- (void)pause</Declaration>
			
			
			<Anchor>//api/name/pause</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/seekToTime:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>- (void)seekToTime:(NSTimeInterval)time</Declaration>
			
			
			<Anchor>//api/name/seekToTime:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/setOverlayViews:</TokenIdentifier>
			<Abstract type="html">A collection of views that will be shown/hidden automatically or manually when user interacts with the view.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (copy) IBOutletCollection ( UIView ) NSArray *overlayViews</Declaration>
			
			
			<Anchor>//api/name/overlayViews</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RTSMediaPlayerController/overlayViews</TokenIdentifier>
			<Abstract type="html">A collection of views that will be shown/hidden automatically or manually when user interacts with the view.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (copy) IBOutletCollection ( UIView ) NSArray *overlayViews</Declaration>
			
			
			<Anchor>//api/name/overlayViews</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RTSMediaPlayerController/overlayViews</TokenIdentifier>
			<Abstract type="html">A collection of views that will be shown/hidden automatically or manually when user interacts with the view.</Abstract>
			<DeclaredIn>RTSMediaPlayerController.h</DeclaredIn>
			
			<Declaration>@property (copy) IBOutletCollection ( UIView ) NSArray *overlayViews</Declaration>
			
			
			<Anchor>//api/name/overlayViews</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
        
        
	</File>
</Tokens>